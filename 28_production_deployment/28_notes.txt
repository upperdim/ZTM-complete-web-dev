so far:
    frontend: html = text; css = style; js = logic, behaviours
    backend: node.js server = interacts with the frontend
    database: postgresql = persistent information (data)

We could put our static page onto github pages. (html, css, js)
But now we have server code and db code.
We will use Heroku to deploy. (It's like AWS, Google Cloud, Microsoft Azure, Digital Ocean giving you a computer)
You will normally have your server code on a dedicated computer (server).
We will put frontend and backend to different Heroku computers & create a database too.
You could have your frontend or database on AWS or GitHub pages as well for example.
Frontend, backend and database servers will be different computers.


Controller:
    A source file that handles whenever an endpoint was requested.


Security review:
    Validation:
        Right now we can leave every field blank in the registration page and register as a blank user.
        We don't validate the user input right now.

        1) Frontend should validate the input
        2) SERVER NEVER TRUSTS ANYTHING FROM THE FRONTEND, performs its own validation too


API Key Handling:
    Our API key was in the frontend, so it was sent over to Clarifai in a request header and could be obtained.
    This is a free API, but if we used a paid one, people could see this API, use it extensively to cost us money.
    We have to move our API key to our backend.