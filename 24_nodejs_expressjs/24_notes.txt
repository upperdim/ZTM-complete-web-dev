Node.js:
	Javascript engine just like browsers Javascript engine v8
	Fast, popular for building servers
	Choice for most web apps, real-time comm, chat apps

	Can build robots too (Johnny-Five aka J5)

	`node` gives you the node shell

	there is no `window`
	there is `global`
	there is `process` which is the curring process of the node script

globalThis:
	ES2020 feature, points to window object (globalThis === window returns true)

	Why do we need globalThis while we have window too? globalThis works outside of browser too.
	ES2020 wanted to unify environments. globalThis === global returns true

	Even though globalThis has different properties in browser and node, we have a unified codebase.

require() and import:
	read `1_modules` and `2_modules_es_module_syntax` files' comments

3 types of modules:
	read 3_types_of_modules/types_of_modules.txt

express.js:
	Most used js framework for server programming.
	Has great guide and documentation.

express middleware:
	will modify the incoming request before it is processed by its function `app.use(req, res, next) => {...}`

RESTful API:
	REST API defines set of funcitons that developers can perform requests and receive responses via HTTP protocol such as GET POST DELETE PUT.

	This is set of rules for people to follow so systems are compatible.

	Architectural style.

	GET to receive a resource
	PUT to change the state or update a resource
	POST that creates a resource
	DELETE to remove a resources

	/profile -> if GET request, we will get a profile. if POST request, we will create a profile. if PUT, we update a profile.
	Think of above URL like a noun and HTTP request is the verb.

	REST APIs are "stateless".
	Meaning calls can be made independently of one another.
	Each call contains enough data to complete itself successfully.

	Server doesn't have to memorise things. Each call contains enough information that tasks can be completed regardless of who the caller is.

	


